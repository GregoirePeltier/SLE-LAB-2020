/*
 * generated by Xtext 2.14.0
 */
package unice.epu.carpilot.xtext.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import unice.epu.carpilot.ecore.carpilot.Car
import unice.epu.carpilot.ecore.carpilot.Rule
import unice.epu.carpilot.xtext.services.CarpilotGrammarAccess

class CarpilotFormatter extends AbstractFormatter2 {
	
	@Inject extension CarpilotGrammarAccess

	def dispatch void format(Car car, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (rule : car.rules) {
			rule.format
		}
		for (command : car.orders) {
			command.format
		}
	}

	def dispatch void format(Rule rule, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		rule.condition.format
		rule.effect.format
	}
	
	// TODO: implement for CommandEffect
}
